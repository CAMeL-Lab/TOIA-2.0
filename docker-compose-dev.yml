version: "3"
services:
  mysql:
    build: server/mysql
    command: --default-authentication-plugin=mysql_native_password --secure-file-priv=""
    restart: on-failure
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
    ports:
      - "3307:3306"
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$DB_USERNAME --password=$$DB_PASSWORD
    volumes:
      - mysql-vol:/var/lib/mysql

  phpMyAdmin:
    depends_on:
      - mysql
    image: phpmyadmin:5.1.1-apache
    restart: on-failure
    ports:
      - "8080:80"
    environment:
      - PMA_ARBITRARY=1
      - UPLOAD_LIMIT=350M

  q_api:
    build: server/q_api
    ports:
      - "5000:5000"
    environment:
      - ENVIRONMENT=development
      - PYTHONUNBUFFERED=1
    volumes:
      - ./server/q_api:/app
    depends_on:
      mysql:
        condition: service_healthy
    env_file:
      - ./.env

  toia-dm:
    build: server/toia-dm
    ports:
      - ${DM_PORT}:${DM_PORT}
    volumes:
      - ./server/toia-dm:/app
    depends_on:
      mysql:
        condition: service_healthy
    env_file:
      - ./.env
    environment:
      - PYTHONUNBUFFERED=1

  express-api:
    depends_on:
      mysql:
        condition: service_healthy
    build:
      context: ./
      dockerfile: server/Dockerfile.dev
    restart: on-failure
    ports:
      - ${EXPRESS_PORT}:${EXPRESS_PORT}
    environment:
      - PORT=3001
      - ENVIRONMENT=development
    container_name: express-api
    volumes:
      - ./server:/app/
      - /app/node_modules
    env_file:
      - ./.env
      - ./server/.env

  react-ui:
    depends_on:
      - mysql
    build: interface
    ports:
      - "3000:3000"
    volumes:
      - ./interface:/app
      - /app/node_modules
    env_file:
      - ./.env
      - ./interface/.env
    environment:
      - CHOKIDAR_USEPOLLING=true

  metabase-sql-wrapper:
    build:
      context: ./metabase
      dockerfile: ./Dockerfile
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "3002:3000"
    volumes:
      - ./metabase/data:/data
    environment:
      MB_DB_FILE: /data/metabase
      MB_DB_INIT_SQL_FILE: /data/metabase.db.sql
      MB_DB_SAVE_TO_SQL_FILE: /data/metabase.db.sql
  
  rabbitmq3:
    container_name: "rabbitmq"
    image: rabbitmq:3.8-management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=${RMQ_USERNAME}
      - RABBITMQ_DEFAULT_PASS=${RMQ_PASSWORD}
    ports:
      # AMQP protocol port
      - '5672:5672'
      # HTTP management UI
      - '15672:15672'

  translation:
    depends_on:
      - rabbitmq3
    container_name: "translation_py"
    build: server/translation
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=toia-translation.json
      - ENVIRONMENT=development
volumes:
  mysql-vol: