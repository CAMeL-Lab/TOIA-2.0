[{"/Users/wahibkamran/Desktop/Capstone in Computer Science/TOIA Systems Design/TOIA++/interface/src/App.js":"1","/Users/wahibkamran/Desktop/Capstone in Computer Science/TOIA Systems Design/TOIA++/interface/src/reportWebVitals.js":"2","/Users/wahibkamran/Desktop/Capstone in Computer Science/TOIA Systems Design/TOIA++/interface/src/index.js":"3","/Users/wahibkamran/Desktop/Capstone in Computer Science/TOIA Systems Design/TOIA++/interface/src/pages/Recorder.js":"4","/Users/wahibkamran/Desktop/Capstone in Computer Science/TOIA Systems Design/TOIA++/interface/src/services/history.js":"5","/Users/wahibkamran/Desktop/Capstone in Computer Science/TOIA Systems Design/TOIA++/interface/src/pages/AvatarSettings.js":"6","/Users/wahibkamran/Desktop/Capstone in Computer Science/TOIA Systems Design/TOIA++/interface/src/pages/Player.js":"7","/Users/wahibkamran/Desktop/Capstone in Computer Science/TOIA Systems Design/TOIA++/interface/src/pages/MainMenuPage.js":"8","/Users/wahibkamran/Desktop/Capstone in Computer Science/TOIA Systems Design/TOIA++/interface/src/pages/LoginPage.js":"9","/Users/wahibkamran/Desktop/Capstone in Computer Science/TOIA Systems Design/TOIA++/interface/src/routes/index.js":"10","/Users/wahibkamran/Desktop/Capstone in Computer Science/TOIA Systems Design/TOIA++/interface/src/pages/HomePage.js":"11","/Users/wahibkamran/Desktop/Capstone in Computer Science/TOIA Systems Design/TOIA++/interface/src/pages/SignUpPage.js":"12","/Users/wahibkamran/Desktop/Capstone in Computer Science/TOIA Systems Design/TOIA++/interface/src/pages/AvatarLibraryPage.js":"13","/Users/wahibkamran/Desktop/Capstone in Computer Science/TOIA Systems Design/TOIA++/interface/src/pages/AvatarGardenPage.js":"14"},{"size":339,"mtime":1610545569039,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1606221815643,"results":"17","hashOfConfig":"16"},{"size":500,"mtime":1606221815641,"results":"18","hashOfConfig":"16"},{"size":6861,"mtime":1610603130052,"results":"19","hashOfConfig":"16"},{"size":132,"mtime":1610543589485,"results":"20","hashOfConfig":"16"},{"size":5965,"mtime":1610550310470,"results":"21","hashOfConfig":"16"},{"size":1328,"mtime":1610542093754,"results":"22","hashOfConfig":"16"},{"size":1354,"mtime":1610547606678,"results":"23","hashOfConfig":"16"},{"size":1368,"mtime":1610547431120,"results":"24","hashOfConfig":"16"},{"size":1336,"mtime":1610545889607,"results":"25","hashOfConfig":"16"},{"size":1508,"mtime":1610550549128,"results":"26","hashOfConfig":"16"},{"size":3034,"mtime":1610544003540,"results":"27","hashOfConfig":"16"},{"size":2949,"mtime":1610606990482,"results":"28","hashOfConfig":"16"},{"size":4312,"mtime":1610606971324,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"1nne2b5",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"39"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"39"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"36"},"/Users/wahibkamran/Desktop/Capstone in Computer Science/TOIA Systems Design/TOIA++/interface/src/App.js",["72","73","74","75"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Switch, Route, Redirect} from 'react-router-dom';\n\nimport history from './services/history';\nimport Routes from './routes/';\n\nfunction App() {\n  return (\n    <Router history={history}>\n      <Routes />\n    </Router>\n  );\n}\n\nexport default App;\n",["76","77"],"/Users/wahibkamran/Desktop/Capstone in Computer Science/TOIA Systems Design/TOIA++/interface/src/reportWebVitals.js",[],["78","79"],"/Users/wahibkamran/Desktop/Capstone in Computer Science/TOIA Systems Design/TOIA++/interface/src/index.js",[],["80","81"],"/Users/wahibkamran/Desktop/Capstone in Computer Science/TOIA Systems Design/TOIA++/interface/src/pages/Recorder.js",["82","83","84","85","86","87","88","89","90","91"],"import './App.css';\nimport './Recorder.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport React,  {useState, useEffect, useRef} from \"react\";\nimport Webcam from \"react-webcam\";\nimport recordIcon from \"../icons/record_button.svg\";\nimport stopIcon from \"../icons/stop_button.svg\";\nimport closeButton from \"../icons/close-button.svg\";\nimport menuButton from \"../icons/menu2-button.svg\";\nimport axios from 'axios';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport history from '../services/history';\nimport {Menu, Sidebar, Segment } from 'semantic-ui-react';\n\nconst videoConstraints = {\n  width: 1400,\n  height: 500,\n  facingMode: \"user\"\n};\n\nfunction Recorder () {\n  // const history = useHistory();\n  useEffect(() => {\n    axios.get('http://localhost:3000/getQuestions').then((res)=>{\n      setQuestionList(res.data);\n\n    });\n  },[]);\n  \n  const { transcript, resetTranscript } = useSpeechRecognition({command: '*'});\n\n  const webcamRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n  const [capturing, setCapturing] = useState(false);\n  const [recordedChunks, setRecordedChunks] = useState([]);\n\n  const [questionList,setQuestionList]=useState([]);\n  const [videoType,setVideoType]=useState(null);\n  const [questionSelected,setQuestionSelected]=useState(null);\n  const [answerProvided,setAnswerProvided]=useState(null);\n\n  const [visible, setVisible] = useState(false);\n\n  const handleStartCaptureClick = React.useCallback((e) => {\n\n    SpeechRecognition.startListening({ continuous: true });\n    setCapturing(true);\n    mediaRecorderRef.current = new MediaRecorder(webcamRef.current.stream, {\n      mimeType: \"video/webm\"\n    });\n    mediaRecorderRef.current.addEventListener(\n      \"dataavailable\",\n      handleDataAvailable\n    );\n    mediaRecorderRef.current.start();\n    e.preventDefault();\n  }, [webcamRef, setCapturing, mediaRecorderRef]);\n\n  const handleDataAvailable = React.useCallback(\n    ({ data }) => {\n      if (data.size > 0) {\n        setRecordedChunks((prev) => prev.concat(data));\n      }\n    },\n    [setRecordedChunks]\n  );\n\n  const handleStopCaptureClick = React.useCallback((e) => {\n  \n    SpeechRecognition.stopListening();\n    mediaRecorderRef.current.stop();\n    setCapturing(false);\n    e.preventDefault();\n  }, [mediaRecorderRef, webcamRef, setCapturing]);\n\n  const handleDownload = React.useCallback((e) => {\n    if (questionSelected == null){\n      alert(\"Cannot submit until a question is chosen or written, ensure that text field is not highlight when submitting\");\n    } else {\n\n      if (recordedChunks.length) {\n        const blob = new Blob(recordedChunks, {\n          type: \"video/webm\"\n        });\n\n        let form = new FormData();\n        form.append('blob', blob);\n        form.append('question', questionSelected);\n        form.append('answer', transcript);\n\n        axios.post('http://localhost:3000/recorder',form);\n\n        // axios({\n        //   method: 'post',\n        //   url: 'http://localhost:3000/recorder',\n        //   data: {\n        //     body: form, // This is the body part\n        //   }\n        // });\n  \n\n\n        // const a = document.createElement(\"a\");\n        // a.style = \"display: none\";\n        // a.href = url;\n        // a.download = inputName+\".mp4\";\n        // a.click();\n        resetTranscript();\n        setRecordedChunks([]);\n      }\n    }\n    e.preventDefault();\n  }, [recordedChunks]);\n  \n\n  function buttonClick(event){\n    event.preventDefault();\n    setQuestionSelected(event.target.value);\n  }\n\n  function close(){\n    history.push({\n      pathname: '/garden',\n    });\n  }\n\n  return (\n    <form className=\"record-page\" name=\"form1\" action=\"form1\" >\n\n        <>\n            <Sidebar.Pushable as={Segment}>\n                <Sidebar\n                    as={Menu}\n                    animation='overlay'\n                    icon='labeled'\n                    onHide={() => setVisible(false)}\n                    vertical\n                    visible={visible}\n                    width='wide'\n                >\n                    <Menu.Item>\n                        <div className=\"menu-header\">Video Type</div>\n                    </Menu.Item>\n                    <Menu.Item >\n                    <div onClick={e=>setVideoType(e.target.value)} className=\"menu-item\">Filler</div>\n                    </Menu.Item>\n                    <Menu.Item >\n                    <div onClick={e=>setVideoType(e.target.value)} className=\"menu-item1\">Greeting</div>\n                    </Menu.Item>\n                    <Menu.Item >\n                    <div onClick={e=>setVideoType(e.target.value)} className=\"menu-item2\">Exit</div>\n                    </Menu.Item>\n                    <Menu.Item >\n                    <div onClick={e=>setVideoType(e.target.value)} className=\"menu-item3\">Regular Answer</div>\n                    </Menu.Item>\n                    <Menu.Item >\n                    <div onClick={e=>setVideoType(e.target.value)} className=\"menu-item4\">Answer Y/N</div>\n                    </Menu.Item>\n                </Sidebar>\n\n                <Sidebar.Pusher dimmed={visible}>\n                  <div>\n                    <div onClick={close}><img className=\"close_icon\" src={closeButton} /></div>\n                    <div onClick={() => setVisible(true)}><img className=\"menu_icon\" src={menuButton} /></div>\n                    <Webcam className=\"layout\" audio={true} ref={webcamRef} mirrored={true} videoConstraints={videoConstraints}/>\n                    {capturing ? (\n                      <button className=\"icon\" onClick={handleStopCaptureClick}><img src={stopIcon}/></button>\n                    ) : (\n                      <button className=\"icon\" onClick={handleStartCaptureClick}><img src={recordIcon}/></button>\n                    )}\n                    {recordedChunks.length > 0 && (\n                      <button className=\"check\" onClick={handleDownload}><i class=\"fa fa-check\"></i></button>\n                    )}\n                    <p className=\"speech\">{transcript}</p>\n                    <button className=\"gen-q x1\" value={questionList[0]} onClick={buttonClick}>{questionList[0]}</button>\n                    <button className=\"gen-q x2\" value={questionList[1]} onClick={buttonClick}>{questionList[1]}</button>\n                    <button className=\"gen-q x3\" value={questionList[2]} onClick={buttonClick}>{questionList[2]}</button>\n                    <input\n                      className=\"type-q font-class-1\"\n                      placeholder={\"Type your own question\"}\n                      type={\"text\"}\n                      required={false}\n                      onChange={e=>setQuestionSelected(e.target.value)}\n                    />\n                  </div>\n                </Sidebar.Pusher>\n              </Sidebar.Pushable>\n            </>\n    </form>\n  );\n}\n\nexport default Recorder;","/Users/wahibkamran/Desktop/Capstone in Computer Science/TOIA Systems Design/TOIA++/interface/src/services/history.js",[],"/Users/wahibkamran/Desktop/Capstone in Computer Science/TOIA Systems Design/TOIA++/interface/src/pages/AvatarSettings.js",["92"],"import './App.css';\nimport './AvatarSettings.css';\nimport React, {useState} from \"react\";\nimport submitButton from \"../icons/submit-button.svg\";\nimport backButton from \"../icons/back-button.svg\";\nimport history from '../services/history';\nimport axios from 'axios';\n\nfunction AvatarSettings() {\n\n  const [name, setName] = useState('');\n  const [language, setLanguage] = useState('');\n  const [privacySetting, setPrivacySetting] = useState('');\n  const [bio, setBio] = useState('');\n\n  function submitHandler(event){\n\n    axios.post('http://localhost:3000/createAvatar',\n      {\n        name,\n        language,\n        privacySetting,\n        bio\n      });\n\n    history.push({\n      pathname: '/recorder',\n      state: {\n        name:name,\n        language:language\n      }\n    });\n  }\n\n  function goBack(){\n    history.goBack();\n  }\n\n  return (\n    <form className=\"avatar-settings-page-1\" onSubmit={submitHandler}>\n    <div className=\"settings-group\">\n    <h1 className=\"settings-settings settings-font-class-3 \">Settings</h1>\n    <p className=\"settings-edit settings-font-class-2 settings-animate-enter\">Edit the follwing about your avatar</p>\n    <input\n      className=\"settings-name settings-font-class-1\"\n      placeholder=\"Name\"\n      type=\"text\"\n      required={true}\n      onChange={e=>setName(e.target.value)}\n    />\n\n    <div className=\"settings-privacy settings-font-class-1 \">Privacy Settings:</div>\n    <select className=\"settings-priv settings-font-class-1\" onChange={e=>setPrivacySetting(e.target.value)}  /*required={true}*/>\n        <option value=\"\" disabled selected hidden>Select Privacy Settings...</option>\n        <option value=\"public\">Public</option>\n        <option value=\"private\">Private</option>\n    </select>\n\n\n    <div className=\"settings-language settings-font-class-1 \">Language:</div>\n        <select className=\"settings-lang settings-font-class-1\" onChange={e=>setLanguage(e.target.value)} /*required={true}*/>\n            <option value=\"\" disabled selected hidden>Select Language...</option>\n            <option value=\"AF\">Afrikaans</option>\n            <option value=\"SQ\">Albanian</option>\n            <option value=\"AR\">Arabic</option>\n            <option value=\"HY\">Armenian</option>\n            <option value=\"EU\">Basque</option>\n            <option value=\"BN\">Bengali</option>\n            <option value=\"BG\">Bulgarian</option>\n            <option value=\"CA\">Catalan</option>\n            <option value=\"KM\">Cambodian</option>\n            <option value=\"ZH\">Chinese (Mandarin)</option>\n            <option value=\"HR\">Croatian</option>\n            <option value=\"CS\">Czech</option>\n            <option value=\"DA\">Danish</option>\n            <option value=\"NL\">Dutch</option>\n            <option value=\"EN\">English</option>\n            <option value=\"ET\">Estonian</option>\n            <option value=\"FJ\">Fiji</option>\n            <option value=\"FI\">Finnish</option>\n            <option value=\"FR\">French</option>\n            <option value=\"KA\">Georgian</option>\n            <option value=\"DE\">German</option>\n            <option value=\"EL\">Greek</option>\n            <option value=\"GU\">Gujarati</option>\n            <option value=\"HE\">Hebrew</option>\n            <option value=\"HI\">Hindi</option>\n            <option value=\"HU\">Hungarian</option>\n            <option value=\"IS\">Icelandic</option>\n            <option value=\"ID\">Indonesian</option>\n            <option value=\"GA\">Irish</option>\n            <option value=\"IT\">Italian</option>\n            <option value=\"JA\">Japanese</option>\n            <option value=\"JW\">Javanese</option>\n            <option value=\"KO\">Korean</option>\n            <option value=\"LA\">Latin</option>\n            <option value=\"LV\">Latvian</option>\n            <option value=\"LT\">Lithuanian</option>\n            <option value=\"MK\">Macedonian</option>\n            <option value=\"MS\">Malay</option>\n            <option value=\"ML\">Malayalam</option>\n            <option value=\"MT\">Maltese</option>\n            <option value=\"MI\">Maori</option>\n            <option value=\"MR\">Marathi</option>\n            <option value=\"MN\">Mongolian</option>\n            <option value=\"NE\">Nepali</option>\n            <option value=\"NO\">Norwegian</option>\n            <option value=\"FA\">Persian</option>\n            <option value=\"PL\">Polish</option>\n            <option value=\"PT\">Portuguese</option>\n            <option value=\"PA\">Punjabi</option>\n            <option value=\"QU\">Quechua</option>\n            <option value=\"RO\">Romanian</option>\n            <option value=\"RU\">Russian</option>\n            <option value=\"SM\">Samoan</option>\n            <option value=\"SR\">Serbian</option>\n            <option value=\"SK\">Slovak</option>\n            <option value=\"SL\">Slovenian</option>\n            <option value=\"ES\">Spanish</option>\n            <option value=\"SW\">Swahili</option>\n            <option value=\"SV\">Swedish </option>\n            <option value=\"TA\">Tamil</option>\n            <option value=\"TT\">Tatar</option>\n            <option value=\"TE\">Telugu</option>\n            <option value=\"TH\">Thai</option>\n            <option value=\"BO\">Tibetan</option>\n            <option value=\"TO\">Tonga</option>\n            <option value=\"TR\">Turkish</option>\n            <option value=\"UK\">Ukrainian</option>\n            <option value=\"UR\">Urdu</option>\n            <option value=\"UZ\">Uzbek</option>\n            <option value=\"VI\">Vietnamese</option>\n            <option value=\"CY\">Welsh</option>\n            <option value=\"XH\">Xhosa</option>\n        </select>\n\n\n    <textarea\n      className=\"settings-bio settings-font-class-1\"\n      placeholder=\"Tell us about your TOIA\"\n      type=\"text\"\n      onChange={e=>setBio(e.target.value)}\n    ></textarea>\n    </div>\n    <input className=\"settings-submit-button smart-layers-pointers \" type=\"image\" src={submitButton} alt=\"Submit\"/>\n    <div onClick={goBack}><img className=\"settings-back_icon\" src={backButton} /></div>\n    </form>\n  );\n}\n\nexport default AvatarSettings;","/Users/wahibkamran/Desktop/Capstone in Computer Science/TOIA Systems Design/TOIA++/interface/src/pages/Player.js",["93","94","95","96","97","98"],"import React, {Component} from 'react';\nimport {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\n\nfunction Player(){\n  const { transcript, resetTranscript } = useSpeechRecognition({command: '*',callback:fetchData});\n\n  const [language,setLanguage] = useState('English');\n  const [avatar,setAvatar] = useState('Margarita');\n  const [video,setVideo] = useState('');\n  const [caption,setCaption] = useState('');\n\n  function fetchData(event){\n\n    event.preventDefault();\n  \n    SpeechRecognition.stopListening();\n\n    let question = transcript[0].toUpperCase()+transcript.slice(1);\n\n    let videoElem= <video width='320' height='240' key={question} autoPlay><source src={`http://localhost:3000/player/${avatar}/${language}/${question}`} type='video/mp4'></source></video>;\n\n    console.log(videoElem);\n\n    setVideo(videoElem);\n\n  }\n\n  return (\n    <div>\n      <div>{avatar}</div>\n      <div>{language}</div>\n\n      <div>{video}</div>\n      <div>{caption}</div>\n\n      <button onClick={()=>{SpeechRecognition.startListening({ continuous: true })}}>Start</button>\n      <button onClick={fetchData}>Stop</button>\n      <button onClick={resetTranscript}>Reset</button>\n      <p>{transcript}</p>\n    </div>\n  )\n}\n\nexport default Player;\n\n","/Users/wahibkamran/Desktop/Capstone in Computer Science/TOIA Systems Design/TOIA++/interface/src/pages/MainMenuPage.js",["99","100","101"],"import './App.css';\nimport './MainMenuPage.css';\nimport React from \"react\";\nimport sampleButton from \"../icons/sample-button.svg\";\nimport closeButton from \"../icons/close-button.svg\";\nimport history from '../services/history';\n\n\nfunction MainMenuPage() {\n    function close(){\n        history.goBack();\n    }\n\n    function garden(){\n        history.push({\n            pathname: '/garden',\n        });\n    }\n    function library(){\n        history.push({\n            pathname: '/library',\n        });\n    }\n\n    // function goToPlayer(){\n    //     history.push({\n    //       pathname: '/player'\n    //     });\n    // }\n\n    // function goToSettings(){\n    //     history.push({\n    //       pathname: '/settings'\n    //     });\n    // }\n    \n    return (\n        <div className=\"menu-page\">\n        <div className=\"menu-group\">\n            <div onClick={garden}><img className=\"menu-garden\" src={sampleButton} /></div>\n            <div onClick={library}><img className=\"menu-library\" src={sampleButton} /></div>\n            <div className=\"menu-text menu-opensans-normal \">Interact With Other Avatars</div>\n            <div className=\"menu-text1 menu-opensans-normal \">Make Your Own Avatar</div>\n        </div>\n        <div onClick={close}><img className=\"menu-close_icon\" src={closeButton} /></div>\n        </div>\n    );\n}\n\nexport default MainMenuPage;",["102","103"],"/Users/wahibkamran/Desktop/Capstone in Computer Science/TOIA Systems Design/TOIA++/interface/src/pages/LoginPage.js",["104","105"],"import './App.css';\nimport './LoginPage.css';\nimport React from \"react\";\nimport submitButton from \"../icons/submit-button.svg\";\nimport backButton from \"../icons/back-button.svg\";\nimport history from '../services/history';\n\nfunction LoginPage() {\n  var inputName= \"email\";\n  var inputName2= \"pass\";\n\n  function submitHandler(){\n    history.push({\n      pathname: '/menu',\n    });\n  }\n\n  function goBack(){\n    history.goBack();\n  }\n\n  function myChangeHandler(event){ //if statement \n    //inputName4 = event.target.value;\n  }\n  return (\n    <form className=\"login-page\" onSubmit={submitHandler}>\n    <input className=\"login-button smart-layers-pointers \" type=\"image\" src={submitButton} alt=\"Submit\"/>\n    <div className=\"login-group\">\n        <input\n            className=\"login-pass login-font-class-1\"\n            name={inputName2}\n            placeholder={\"New Password\"}\n            type={\"password\"}\n            //required={true}\n        />\n        <input\n            className=\"login-email login-font-class-1\"\n            name={inputName}\n            placeholder={\"Email\"}\n            type={\"email\"}\n            //required={true}\n        />\n        <h1 className=\"login-title login-font-class-3 \">Log In</h1>\n    </div>\n      <div onClick={goBack}><img className=\"login-back_icon\" src={backButton} /></div>\n    </form>\n  );\n}\n\nexport default LoginPage;\n        ","/Users/wahibkamran/Desktop/Capstone in Computer Science/TOIA Systems Design/TOIA++/interface/src/routes/index.js",[],"/Users/wahibkamran/Desktop/Capstone in Computer Science/TOIA Systems Design/TOIA++/interface/src/pages/HomePage.js",["106","107","108"],"import './App.css';\nimport './HomePage.css';\nimport React from \"react\";\nimport loginButton from \"../icons/login-button.svg\";\nimport signupButton from \"../icons/signup-button.svg\";\nimport sample from \"../icons/sample-video.svg\";\nimport history from '../services/history';\n\n\nfunction HomePage() {\n  let welcome_text= \"Welcome to\";\n  let toia_text= \"TOIA\";\n  let toia_icon= \"TOIA\";\n  let blurb = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean diam metus, efficitur et nunc ut\";\n\n  function login(){\n    history.push({\n      pathname: '/login',\n    });\n  }\n\n  function signup(){\n    history.push({\n      pathname: '/signup',\n    });\n  }\n\n  return (\n    <div className=\"home-page\">\n      <div className=\"home-heading-bar\">\n        <div className=\"home-toia_icon home-opensans-normal\">\n          {toia_icon}\n        </div>\n      </div>\n      <div className=\"home-rectangle\"></div>\n      <img className=\"home-sample-videos home-animate-enter\" src={sample} />\n      \n      <div className=\"home-overlap-group\">\n        <div className=\"home-des home-montserrat-black\">{blurb}</div>\n        <h1 className=\"home-toia home-opensans-normal\">{toia_text}</h1>\n        <div className=\"home-welcome-text home-montserrat-black\">{welcome_text}</div>\n       \n        <div onClick={login}><img className=\"home-login\" src={loginButton} /></div>\n        \n        \n        <div onClick={signup}><img className=\"home-signup\" src={signupButton} /></div>\n      \n      </div>\n    </div>\n  );\n}\n\nexport default HomePage;","/Users/wahibkamran/Desktop/Capstone in Computer Science/TOIA Systems Design/TOIA++/interface/src/pages/SignUpPage.js",["109","110","111","112","113","114","115"],"import './App.css';\nimport './SignUpPage.css';\nimport React from \"react\";\nimport submitButton from \"../icons/signup-button.svg\";\nimport history from '../services/history';\nimport backButton from \"../icons/back-button.svg\";\n\nfunction SignUpPage() {\n  var inputName= \"fname\";\n  var inputName2= \"lname\";\n  var inputName3= \"email\";\n  var inputName4= \"pass\";\n  var inputName5= \"pass1\";\n\n  var input1, input2, input3, input4, input5; //these hold all the user sign up data, they follow the order first name, \n  //last name, email and password, ignore input5  and access them in the submitHandler Function(wahib)\n\n  function myChangeHandler(event){\n    event.preventDefault();\n    var name = event.target.name;\n\n    switch(name) {\n      case inputName:\n        input1 = event.target.value;\n        break;\n      case inputName2:\n        input2 = event.target.value;\n        break;\n      case inputName3:\n        input3 = event.target.value;\n        break;\n      case inputName4:\n        input4 = event.target.value;\n        break;\n      case inputName5:\n        input5 = event.target.value;\n        break;\n    }\n  }\n\n  function submitHandler(){\n    history.push({\n      pathname: '/settings',\n    });\n    //access them here\n  }\n\n  function goBack(){\n    history.goBack();\n  }\n\n  return (\n    <form className=\"signup-page\" onSubmit={submitHandler}>\n      <input className=\"signup-button smart-layers-pointers \" type=\"image\" src={submitButton} alt=\"Submit\"/>\n      <div className=\"signup-group\">\n          <input\n              className=\"signup-pass1 signup-font-class-1\"\n              name={inputName5}\n              placeholder={\"Confirm Password\"}\n              type={\"password\"}\n              //required={true}\n              onChange={myChangeHandler}\n          />\n          <input\n              className=\"signup-pass signup-font-class-1\"\n              name={inputName4}\n              placeholder={\"New Password\"}\n              type={\"password\"}\n              //required={true}\n              onChange={myChangeHandler}\n          />\n          <input\n              className=\"signup-email signup-font-class-1\"\n              name={inputName3}\n              placeholder={\"Email\"}\n              type={\"email\"}\n              //required={true}\n              onChange={myChangeHandler}\n          />\n          <input\n              className=\"signup-lname signup-font-class-1\"\n              name={inputName2}\n              placeholder={\"Last Name\"}\n              type={\"text\"}\n              //required={true}\n              onChange={myChangeHandler}\n          />\n          <input\n              className=\"signup-fname signup-font-class-1\"\n              name={inputName}\n              placeholder={\"First Name\"}\n              type={\"text\"}\n              //required={true}\n              onChange={myChangeHandler}\n          />\n          <h1 className=\"signup-title signup-font-class-3 \">Get Started</h1>\n      </div>\n      <div onClick={goBack}><img className=\"signup-back_icon\" src={backButton} /></div>\n    </form>\n  );\n}\n\nexport default SignUpPage;","/Users/wahibkamran/Desktop/Capstone in Computer Science/TOIA Systems Design/TOIA++/interface/src/pages/AvatarLibraryPage.js",["116"],"import './App.css';\nimport './AvatarLibraryPage.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport React from 'react';\nimport { Card } from \"react-bootstrap\";\nimport menuButton from \"../icons/menu-button.svg\";\nimport sampleVideo from \"../icons/sample-video.svg\";\nimport history from '../services/history';\nimport {Menu, Sidebar, Segment } from 'semantic-ui-react';\nimport axios from 'axios';\n\nfunction AvatarLibraryPage() {\n    \n    const [visible, setVisible] = React.useState(false)\n    const [avatarList, setAvatarList] = React.useState([]);\n    const [avatarCards, setAvatarCards] = React.useState(''); \n\n    React.useEffect(() => {\n        axios.get('http://localhost:3000/getAllAvatars').then((res)=>{\n            setAvatarList(res.data);\n            setAvatarCards(avatarList.map(renderCard));\n        });\n    });\n\n    const renderCard = (avatar, index) => {\n        return(\n            <Card onClick={view} key={index} className=\"library-box border-0\">\n                <Card.Img className=\"library-still\"variant=\"top\" src={sampleVideo}/>\n                <Card.Body>\n                    <Card.Title className=\"library-name\">{avatar}</Card.Title>\n                </Card.Body>\n            </Card>\n        )\n    }\n    //A delete function, that deletes the specific avatar in aws (Wahib)\n\n    function view(){\n        history.push({\n          pathname: '/view',\n        });\n    }\n\n    function mainmenu() {\n        history.push({\n           pathname: '/mainmenu',\n         }); \n     }\n \n     function logout(){\n         //logout function needs to be implemented (wahib)\n         history.push({\n             pathname: '/',\n           });\n     } \n\n    return (\n        <div className=\"library-page\">\n            <>\n            <Sidebar.Pushable as={Segment}>\n                <Sidebar\n                    as={Menu}\n                    animation='overlay'\n                    icon='labeled'\n                    onHide={() => setVisible(false)}\n                    vertical\n                    visible={visible}\n                    width='wide'\n                >\n                    <Menu.Item>\n                        <div onClick={mainmenu} className=\"library-menu-item\">Exit to Main Menu</div>\n                    </Menu.Item>\n                    <Menu.Item >\n                    <div onClick={logout} className=\"library-menu-item red\">Logout</div>\n                    </Menu.Item>\n                </Sidebar>\n\n                <Sidebar.Pusher dimmed={visible}>\n                    <div onClick={() => setVisible(true)}><img className=\"library-menu_icon\" src={menuButton} /></div>\n                    <input className=\"library-search\" type=\"text\" placeholder=\"&#xF002;\" /*onKeyUp={}*//>\n                    <div className =\"library-grid\">\n                        {avatarCards}\n                    </div>\n\n                </Sidebar.Pusher>\n            </Sidebar.Pushable>\n            </>\n        </div>\n    );\n}\n\nexport default AvatarLibraryPage;","/Users/wahibkamran/Desktop/Capstone in Computer Science/TOIA Systems Design/TOIA++/interface/src/pages/AvatarGardenPage.js",["117","118","119","120","121"],"import './App.css';\nimport './AvatarGardenPage.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport React from 'react';\nimport { Card } from \"react-bootstrap\";\nimport addButton from \"../icons/add-button.svg\";\nimport menuButton from \"../icons/menu-button.svg\";\nimport sampleVideo from \"../icons/sample-video.svg\";\nimport settingsButton from \"../icons/settings-button.svg\";\nimport history from '../services/history';\nimport {Menu, Sidebar, Segment } from 'semantic-ui-react';\nimport axios from 'axios';\n\nfunction AvatarGardenPage() {\n\n    React.useEffect(() => {\n        console.log('wohoo');\n        axios.get('http://localhost:3000/getAllAvatars').then((res)=>{\n            console.log(res);\n        });\n       \n    });\n\n    const [visible, setVisible] = React.useState(false);\n    const [avatarList, setAvatarList] = React.useState([]);\n\n    var avatars = [ //This is a list that will hold the still image and name of avatar the user has created, needs to come from backend (Wahib)\n        { still: sampleVideo, name: \"John Doe\" },\n        { still: sampleVideo, name: \"Jane Doe\" },\n        { still: sampleVideo, name: \"John Doe\" },\n        { still: sampleVideo, name: \"John Doe\" },\n        { still: sampleVideo, name: \"John Doe\" },\n        { still: sampleVideo, name: \"John Doe\" },\n        { still: sampleVideo, name: \"John Doe\" },\n        { still: sampleVideo, name: \"John Doe\" },\n        { still: sampleVideo, name: \"John Doe\" },\n        { still: sampleVideo, name: \"John Doe\" },\n        { still: sampleVideo, name: \"John Doe\" },\n        { still: sampleVideo, name: \"John Doe\" },\n        { still: sampleVideo, name: \"John Doe\" },\n        { still: sampleVideo, name: \"John Doe\" },\n        { still: sampleVideo, name: \"John Doe\" },\n        ];\n\n    const renderCard = (card, index) => {\n        return(\n            <Card key={index} className=\"garden-box border-0\">\n                <Card.Img className=\"garden-still\"variant=\"top\" src={card.still}/>\n                <Card.Body>\n                    <Card.Title className=\"garden-name\">{card.name}</Card.Title>\n                    <div className=\"garden-popup\">\n                        <button /*onClick={}*/ className=\"garden-edit\">Edit</button> \n                        <button /*onClick={}*/ className=\"garden-delete\">Delete</button>\n                        <span onClick={settings}><img className=\"garden-settings\" src={settingsButton} /></span>\n                    </div>\n                </Card.Body>\n            </Card>\n        )\n    }\n    //A delete function, that deletes the specific avatar in aws (Wahib)\n\n    function settings(){\n        history.push({\n          pathname: '/settings',\n        });\n    }\n\n    function mainmenu() {\n       history.push({\n          pathname: '/menu',\n        }); \n    }\n\n    function logout(){\n        //logout function needs to be implemented (wahib)\n        history.push({\n            pathname: '/',\n          });\n    }\n\n\n    return (\n        <div className=\"garden-page\">\n            <>\n            <Sidebar.Pushable as={Segment}>\n                <Sidebar\n                    as={Menu}\n                    animation='overlay'\n                    icon='labeled'\n                    onHide={() => setVisible(false)}\n                    vertical\n                    visible={visible}\n                    width='wide'\n                >\n                    <Menu.Item>\n                        <div onClick={mainmenu} className=\"garden-menu-item\">Exit to Main Menu</div>\n                    </Menu.Item>\n                    <Menu.Item >\n                    <div onClick={logout} className=\"garden-menu-item red\">Logout</div>\n                    </Menu.Item>\n                </Sidebar>\n\n                <Sidebar.Pusher dimmed={visible}>\n                    <div onClick={settings}><img className=\"garden-add\" src={addButton} /></div>\n                    <div className =\"garden-grid\">\n                        {avatars.map(renderCard)}\n                    </div>\n                    <input className=\"garden-search\" type=\"text\" placeholder=\"&#xF002;\" /*onKeyUp={}*//>\n                    <div onClick={() => setVisible(true)}><img className=\"garden-menu_icon\" src={menuButton} /></div>\n                </Sidebar.Pusher>\n            </Sidebar.Pushable>\n            </>\n        </div>\n    );\n}\n\nexport default AvatarGardenPage;",{"ruleId":"122","severity":1,"message":"123","line":2,"column":8,"nodeType":"124","messageId":"125","endLine":2,"endColumn":16},{"ruleId":"122","severity":1,"message":"126","line":3,"column":35,"nodeType":"124","messageId":"125","endLine":3,"endColumn":41},{"ruleId":"122","severity":1,"message":"127","line":3,"column":43,"nodeType":"124","messageId":"125","endLine":3,"endColumn":48},{"ruleId":"122","severity":1,"message":"128","line":3,"column":50,"nodeType":"124","messageId":"125","endLine":3,"endColumn":58},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"129","replacedBy":"133"},{"ruleId":"131","replacedBy":"134"},{"ruleId":"129","replacedBy":"135"},{"ruleId":"131","replacedBy":"136"},{"ruleId":"122","severity":1,"message":"137","line":38,"column":10,"nodeType":"124","messageId":"125","endLine":38,"endColumn":19},{"ruleId":"122","severity":1,"message":"138","line":40,"column":10,"nodeType":"124","messageId":"125","endLine":40,"endColumn":24},{"ruleId":"122","severity":1,"message":"139","line":40,"column":25,"nodeType":"124","messageId":"125","endLine":40,"endColumn":42},{"ruleId":"140","severity":1,"message":"141","line":57,"column":6,"nodeType":"142","endLine":57,"endColumn":49,"suggestions":"143"},{"ruleId":"140","severity":1,"message":"144","line":74,"column":6,"nodeType":"142","endLine":74,"endColumn":49,"suggestions":"145"},{"ruleId":"140","severity":1,"message":"146","line":113,"column":6,"nodeType":"142","endLine":113,"endColumn":22,"suggestions":"147"},{"ruleId":"148","severity":1,"message":"149","line":163,"column":42,"nodeType":"150","endLine":163,"endColumn":90},{"ruleId":"148","severity":1,"message":"149","line":164,"column":59,"nodeType":"150","endLine":164,"endColumn":105},{"ruleId":"148","severity":1,"message":"149","line":167,"column":81,"nodeType":"150","endLine":167,"endColumn":102},{"ruleId":"148","severity":1,"message":"149","line":169,"column":82,"nodeType":"150","endLine":169,"endColumn":105},{"ruleId":"148","severity":1,"message":"149","line":146,"column":27,"nodeType":"150","endLine":146,"endColumn":82},{"ruleId":"122","severity":1,"message":"151","line":1,"column":16,"nodeType":"124","messageId":"125","endLine":1,"endColumn":25},{"ruleId":"122","severity":1,"message":"152","line":2,"column":19,"nodeType":"124","messageId":"125","endLine":2,"endColumn":28},{"ruleId":"122","severity":1,"message":"153","line":3,"column":8,"nodeType":"124","messageId":"125","endLine":3,"endColumn":13},{"ruleId":"122","severity":1,"message":"154","line":9,"column":19,"nodeType":"124","messageId":"125","endLine":9,"endColumn":30},{"ruleId":"122","severity":1,"message":"155","line":10,"column":17,"nodeType":"124","messageId":"125","endLine":10,"endColumn":26},{"ruleId":"122","severity":1,"message":"156","line":12,"column":18,"nodeType":"124","messageId":"125","endLine":12,"endColumn":28},{"ruleId":"148","severity":1,"message":"149","line":40,"column":35,"nodeType":"150","endLine":40,"endColumn":85},{"ruleId":"148","severity":1,"message":"149","line":41,"column":36,"nodeType":"150","endLine":41,"endColumn":87},{"ruleId":"148","severity":1,"message":"149","line":45,"column":30,"nodeType":"150","endLine":45,"endColumn":83},{"ruleId":"129","replacedBy":"157"},{"ruleId":"131","replacedBy":"158"},{"ruleId":"122","severity":1,"message":"159","line":22,"column":12,"nodeType":"124","messageId":"125","endLine":22,"endColumn":27},{"ruleId":"148","severity":1,"message":"149","line":45,"column":29,"nodeType":"150","endLine":45,"endColumn":81},{"ruleId":"148","severity":1,"message":"149","line":36,"column":7,"nodeType":"150","endLine":36,"endColumn":77},{"ruleId":"148","severity":1,"message":"149","line":43,"column":30,"nodeType":"150","endLine":43,"endColumn":78},{"ruleId":"148","severity":1,"message":"149","line":46,"column":31,"nodeType":"150","endLine":46,"endColumn":81},{"ruleId":"160","severity":1,"message":"161","line":22,"column":5,"nodeType":"162","messageId":"163","endLine":38,"endColumn":6},{"ruleId":"122","severity":1,"message":"164","line":24,"column":9,"nodeType":"124","messageId":"125","endLine":24,"endColumn":15},{"ruleId":"122","severity":1,"message":"165","line":27,"column":9,"nodeType":"124","messageId":"125","endLine":27,"endColumn":15},{"ruleId":"122","severity":1,"message":"166","line":30,"column":9,"nodeType":"124","messageId":"125","endLine":30,"endColumn":15},{"ruleId":"122","severity":1,"message":"167","line":33,"column":9,"nodeType":"124","messageId":"125","endLine":33,"endColumn":15},{"ruleId":"122","severity":1,"message":"168","line":36,"column":9,"nodeType":"124","messageId":"125","endLine":36,"endColumn":15},{"ruleId":"148","severity":1,"message":"149","line":98,"column":29,"nodeType":"150","endLine":98,"endColumn":82},{"ruleId":"148","severity":1,"message":"149","line":78,"column":59,"nodeType":"150","endLine":78,"endColumn":113},{"ruleId":"122","severity":1,"message":"169","line":25,"column":12,"nodeType":"124","messageId":"125","endLine":25,"endColumn":22},{"ruleId":"122","severity":1,"message":"170","line":25,"column":24,"nodeType":"124","messageId":"125","endLine":25,"endColumn":37},{"ruleId":"148","severity":1,"message":"149","line":54,"column":50,"nodeType":"150","endLine":54,"endColumn":106},{"ruleId":"148","severity":1,"message":"149","line":104,"column":45,"nodeType":"150","endLine":104,"endColumn":91},{"ruleId":"148","severity":1,"message":"149","line":109,"column":59,"nodeType":"150","endLine":109,"endColumn":112},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'Redirect' is defined but never used.","no-native-reassign",["171"],"no-negated-in-lhs",["172"],["171"],["172"],["171"],["172"],"'videoType' is assigned a value but never used.","'answerProvided' is assigned a value but never used.","'setAnswerProvided' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useCallback has a missing dependency: 'handleDataAvailable'. Either include it or remove the dependency array.","ArrayExpression",["173"],"React Hook React.useCallback has an unnecessary dependency: 'webcamRef'. Either exclude it or remove the dependency array.",["174"],"React Hook React.useCallback has missing dependencies: 'questionSelected', 'resetTranscript', and 'transcript'. Either include them or remove the dependency array.",["175"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Component' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'setLanguage' is assigned a value but never used.","'setAvatar' is assigned a value but never used.","'setCaption' is assigned a value but never used.",["171"],["172"],"'myChangeHandler' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'input1' is assigned a value but never used.","'input2' is assigned a value but never used.","'input3' is assigned a value but never used.","'input4' is assigned a value but never used.","'input5' is assigned a value but never used.","'avatarList' is assigned a value but never used.","'setAvatarList' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},"Update the dependencies array to be: [handleDataAvailable]",{"range":"182","text":"183"},"Update the dependencies array to be: [mediaRecorderRef, setCapturing]",{"range":"184","text":"185"},"Update the dependencies array to be: [questionSelected, recordedChunks, resetTranscript, transcript]",{"range":"186","text":"187"},[1858,1901],"[handleDataAvailable]",[2295,2338],"[mediaRecorderRef, setCapturing]",[3404,3420],"[questionSelected, recordedChunks, resetTranscript, transcript]"]