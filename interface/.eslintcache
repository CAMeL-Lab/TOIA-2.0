[{"/Users/tyeecehensley/Desktop/TOIA-2.0/interface/src/index.js":"1","/Users/tyeecehensley/Desktop/TOIA-2.0/interface/src/App.js":"2","/Users/tyeecehensley/Desktop/TOIA-2.0/interface/src/reportWebVitals.js":"3","/Users/tyeecehensley/Desktop/TOIA-2.0/interface/src/services/history.js":"4","/Users/tyeecehensley/Desktop/TOIA-2.0/interface/src/routes/index.js":"5","/Users/tyeecehensley/Desktop/TOIA-2.0/interface/src/pages/MainMenuPage.js":"6","/Users/tyeecehensley/Desktop/TOIA-2.0/interface/src/pages/AvatarLibraryPage.js":"7","/Users/tyeecehensley/Desktop/TOIA-2.0/interface/src/pages/AvatarViewPage.js":"8","/Users/tyeecehensley/Desktop/TOIA-2.0/interface/src/pages/Recorder.js":"9","/Users/tyeecehensley/Desktop/TOIA-2.0/interface/src/pages/Player.js":"10","/Users/tyeecehensley/Desktop/TOIA-2.0/interface/src/pages/SignUpPage.js":"11","/Users/tyeecehensley/Desktop/TOIA-2.0/interface/src/pages/LoginPage.js":"12","/Users/tyeecehensley/Desktop/TOIA-2.0/interface/src/pages/AvatarGardenPage.js":"13","/Users/tyeecehensley/Desktop/TOIA-2.0/interface/src/pages/HomePage.js":"14","/Users/tyeecehensley/Desktop/TOIA-2.0/interface/src/pages/EditRecorderPage.js":"15","/Users/tyeecehensley/Desktop/TOIA-2.0/interface/src/pages/AvatarSettings.js":"16"},{"size":500,"mtime":1611951526525,"results":"17","hashOfConfig":"18"},{"size":339,"mtime":1611951526520,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1611951526532,"results":"20","hashOfConfig":"18"},{"size":132,"mtime":1611951526533,"results":"21","hashOfConfig":"18"},{"size":1336,"mtime":1611951526533,"results":"22","hashOfConfig":"18"},{"size":1354,"mtime":1611951526531,"results":"23","hashOfConfig":"18"},{"size":3077,"mtime":1612383774919,"results":"24","hashOfConfig":"18"},{"size":7154,"mtime":1611951526529,"results":"25","hashOfConfig":"18"},{"size":8754,"mtime":1611951526532,"results":"26","hashOfConfig":"18"},{"size":2113,"mtime":1611951526531,"results":"27","hashOfConfig":"18"},{"size":3034,"mtime":1611951526532,"results":"28","hashOfConfig":"18"},{"size":1397,"mtime":1612384177024,"results":"29","hashOfConfig":"18"},{"size":5225,"mtime":1612384109537,"results":"30","hashOfConfig":"18"},{"size":1417,"mtime":1612384309506,"results":"31","hashOfConfig":"18"},{"size":7946,"mtime":1611951526529,"results":"32","hashOfConfig":"18"},{"size":6093,"mtime":1611951526528,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"7409mq",{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"36"},"/Users/tyeecehensley/Desktop/TOIA-2.0/interface/src/index.js",[],["76","77"],"/Users/tyeecehensley/Desktop/TOIA-2.0/interface/src/App.js",["78","79","80","81"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Switch, Route, Redirect} from 'react-router-dom';\n\nimport history from './services/history';\nimport Routes from './routes/';\n\nfunction App() {\n  return (\n    <Router history={history}>\n      <Routes />\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/tyeecehensley/Desktop/TOIA-2.0/interface/src/reportWebVitals.js",[],"/Users/tyeecehensley/Desktop/TOIA-2.0/interface/src/services/history.js",[],"/Users/tyeecehensley/Desktop/TOIA-2.0/interface/src/routes/index.js",[],"/Users/tyeecehensley/Desktop/TOIA-2.0/interface/src/pages/MainMenuPage.js",["82","83","84"],"import './App.css';\nimport './MainMenuPage.css';\nimport React from \"react\";\nimport sampleButton from \"../icons/sample-button.svg\";\nimport closeButton from \"../icons/close-button.svg\";\nimport history from '../services/history';\n\n\nfunction MainMenuPage() {\n    function close(){\n        history.goBack();\n    }\n\n    function garden(){\n        history.push({\n            pathname: '/garden',\n        });\n    }\n    function library(){\n        history.push({\n            pathname: '/library',\n        });\n    }\n\n    // function goToPlayer(){\n    //     history.push({\n    //       pathname: '/player'\n    //     });\n    // }\n\n    // function goToSettings(){\n    //     history.push({\n    //       pathname: '/settings'\n    //     });\n    // }\n    \n    return (\n        <div className=\"menu-page\">\n        <div className=\"menu-group\">\n            <div onClick={garden}><img className=\"menu-garden\" src={sampleButton} /></div>\n            <div onClick={library}><img className=\"menu-library\" src={sampleButton} /></div>\n            <div className=\"menu-text menu-opensans-normal \">Interact With Other Avatars</div>\n            <div className=\"menu-text1 menu-opensans-normal \">Make Your Own Avatar</div>\n        </div>\n        <div onClick={close}><img className=\"menu-close_icon\" src={closeButton} /></div>\n        </div>\n    );\n}\n\nexport default MainMenuPage;","/Users/tyeecehensley/Desktop/TOIA-2.0/interface/src/pages/AvatarLibraryPage.js",["85","86"],"import './App.css';\nimport './AvatarLibraryPage.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport React from 'react';\nimport Fuse from \"fuse.js\";\nimport { Card } from \"react-bootstrap\";\nimport menuButton from \"../icons/menu-button.svg\";\nimport sampleVideo from \"../icons/sample-video.svg\";\nimport history from '../services/history';\nimport {Menu, Sidebar, Segment } from 'semantic-ui-react';\nimport axios from 'axios';\n\nfunction AvatarLibraryPage() {\n    \n    const [visible, setVisible] = React.useState(false)\n    const [avatarList, setAvatarList] = React.useState([]);\n    const [avatarCards, setAvatarCards] = React.useState(''); \n\n    React.useEffect(() => {\n        axios.get('http://localhost:3000/getAllAvatars').then((res)=>{\n            setAvatarList(res.data);\n            setAvatarCards(avatarList.map(renderCard));\n        });\n    });\n\n    const renderCard = (avatar) => {\n        return(\n            <Card onClick={()=>view(avatar)} key={avatar} className=\"library-box border-0\">\n                <Card.Img className=\"library-still\"variant=\"top\" src={sampleVideo}/>\n                <Card.Body>\n                    <Card.Title className=\"library-name\">{avatar[0]}</Card.Title>\n                </Card.Body>\n            </Card>\n        )\n    }\n    //A delete function, that deletes the specific avatar in aws (Wahib)\n\n    function view(avatar){\n        history.push({\n          pathname: '/view',\n          state: {\n              id_avatar: avatar[1],\n              name: avatar[0]\n          }\n        });\n    }\n\n    function menu() {\n        history.push({\n           pathname: '/menu',\n         }); \n     }\n \n     function logout(){\n         //logout function needs to be implemented (wahib)\n         history.push({\n             pathname: '/',\n           });\n     } \n\n    return (\n        <div className=\"library-page\">\n            <>\n            <Sidebar.Pushable as={Segment}>\n                <Sidebar\n                    as={Menu}\n                    animation='overlay'\n                    icon='labeled'\n                    onHide={() => setVisible(false)}\n                    vertical\n                    visible={visible}\n                    width='wide'\n                >\n                    <Menu.Item>\n                        <div onClick={menu} className=\"library-menu-item\">Exit to Main Menu</div>\n                    </Menu.Item>\n                    <Menu.Item >\n                    <div onClick={logout} className=\"library-menu-item red\">Logout</div>\n                    </Menu.Item>\n                </Sidebar>\n\n                <Sidebar.Pusher dimmed={visible}>\n                    <div onClick={() => setVisible(true)}><img className=\"library-menu_icon\" src={menuButton} /></div>\n                    <input className=\"library-search\" type=\"text\" placeholder=\"&#xF002;\" /*onKeyUp={}*//>\n                    <div className =\"library-grid\">\n                        {avatarCards}\n                    </div>\n\n                </Sidebar.Pusher>\n            </Sidebar.Pushable>\n            </>\n        </div>\n    );\n}\n\nexport default AvatarLibraryPage;","/Users/tyeecehensley/Desktop/TOIA-2.0/interface/src/pages/AvatarViewPage.js",["87","88","89"],"import './App.css';\nimport './AvatarViewPage.css';\nimport React from \"react\";\nimport submitButton from \"../icons/submit-button.svg\";\nimport backButton from \"../icons/back-button.svg\";\nimport video from \"../icons/sample-video.svg\"\nimport history from '../services/history';\nimport axios from 'axios';\n\n\nfunction AvatarViewPage() {\n    \n    const [name, setName] = React.useState(null);\n    const [language, setLanguage] = React.useState(null);\n    const [bio, setBio] = React.useState(null);\n    const [avatarID,setAvatarID] = React.useState(null);\n\n    const [interactionLanguage, setInteractionLanguage] = React.useState(null);\n    \n    React.useEffect(() => {\n    \n        axios.get('http://localhost:3000/getAvatarInfo',{params:{\n            avatarID: history.location.state.id_avatar\n        }}).then((res)=>{\n            setName(res.data.name);\n            setLanguage(res.data.language);\n            setBio(res.data.bio);\n            setAvatarID(history.location.state.id_avatar);\n        });\n    });\n    \n    function goBack(){\n        history.goBack();\n    }\n    \n\n    function submitHandler(event){\n        history.push({\n            pathname: '/player',\n            state: {\n                name,\n                language,\n                avatarID,\n                interactionLanguage\n            }\n        });\n    }\n     \n    //a function will be needed to send input5 to database (wahib)\n    \n    return (\n        <div className=\"view-page\">\n            <img className=\"view-still\" src={video}/>\n            <input  onClick={submitHandler} className=\"view-submit-button smart-layers-pointers \" type=\"image\" src={submitButton} alt=\"Submit\"/>\n            <div className=\"view-group\">\n                <div className=\"view-name view-font-class-1 \">Name: </div>\n                <input\n                    className=\"view-name_box view-font-class-1\"\n                    defaultValue = {name}\n                    type={\"text\"}\n                />\n                <div className=\"view-creator view-font-class-1 \">Creator: </div>\n                <input\n                    className=\"view-creator_box view-font-class-1\"\n                    defaultValue = {name}\n                    type={\"text\"}\n                />\n                <div className=\"view-lang view-font-class-1 \">Language: </div>\n                <input\n                    className=\"view-lang_box view-font-class-1\"\n                    defaultValue = {language}\n                    type={\"text\"}\n                />\n                <div className=\"view-bio view-font-class-1 \">Bio: </div>\n                <textarea\n                    className=\"view-bio_box view-font-class-1\"\n                    defaultValue = {bio}\n                    type={\"text\"}\n                />\n                <select className=\"view-lang2_box view-font-class-1\" >\n                    <option value=\"\" disabled selected hidden>What language would you like to speak in..</option>\n                    <option value=\"AF\">Afrikaans</option>\n                    <option value=\"SQ\">Albanian</option>\n                    <option value=\"AR\">Arabic</option>\n                    <option value=\"HY\">Armenian</option>\n                    <option value=\"EU\">Basque</option>\n                    <option value=\"BN\">Bengali</option>\n                    <option value=\"BG\">Bulgarian</option>\n                    <option value=\"CA\">Catalan</option>\n                    <option value=\"KM\">Cambodian</option>\n                    <option value=\"ZH\">Chinese (Mandarin)</option>\n                    <option value=\"HR\">Croatian</option>\n                    <option value=\"CS\">Czech</option>\n                    <option value=\"DA\">Danish</option>\n                    <option value=\"NL\">Dutch</option>\n                    <option value=\"EN\">English</option>\n                    <option value=\"ET\">Estonian</option>\n                    <option value=\"FJ\">Fiji</option>\n                    <option value=\"FI\">Finnish</option>\n                    <option value=\"FR\">French</option>\n                    <option value=\"KA\">Georgian</option>\n                    <option value=\"DE\">German</option>\n                    <option value=\"EL\">Greek</option>\n                    <option value=\"GU\">Gujarati</option>\n                    <option value=\"HE\">Hebrew</option>\n                    <option value=\"HI\">Hindi</option>\n                    <option value=\"HU\">Hungarian</option>\n                    <option value=\"IS\">Icelandic</option>\n                    <option value=\"ID\">Indonesian</option>\n                    <option value=\"GA\">Irish</option>\n                    <option value=\"IT\">Italian</option>\n                    <option value=\"JA\">Japanese</option>\n                    <option value=\"JW\">Javanese</option>\n                    <option value=\"KO\">Korean</option>\n                    <option value=\"LA\">Latin</option>\n                    <option value=\"LV\">Latvian</option>\n                    <option value=\"LT\">Lithuanian</option>\n                    <option value=\"MK\">Macedonian</option>\n                    <option value=\"MS\">Malay</option>\n                    <option value=\"ML\">Malayalam</option>\n                    <option value=\"MT\">Maltese</option>\n                    <option value=\"MI\">Maori</option>\n                    <option value=\"MR\">Marathi</option>\n                    <option value=\"MN\">Mongolian</option>\n                    <option value=\"NE\">Nepali</option>\n                    <option value=\"NO\">Norwegian</option>\n                    <option value=\"FA\">Persian</option>\n                    <option value=\"PL\">Polish</option>\n                    <option value=\"PT\">Portuguese</option>\n                    <option value=\"PA\">Punjabi</option>\n                    <option value=\"QU\">Quechua</option>\n                    <option value=\"RO\">Romanian</option>\n                    <option value=\"RU\">Russian</option>\n                    <option value=\"SM\">Samoan</option>\n                    <option value=\"SR\">Serbian</option>\n                    <option value=\"SK\">Slovak</option>\n                    <option value=\"SL\">Slovenian</option>\n                    <option value=\"ES\">Spanish</option>\n                    <option value=\"SW\">Swahili</option>\n                    <option value=\"SV\">Swedish </option>\n                    <option value=\"TA\">Tamil</option>\n                    <option value=\"TT\">Tatar</option>\n                    <option value=\"TE\">Telugu</option>\n                    <option value=\"TH\">Thai</option>\n                    <option value=\"BO\">Tibetan</option>\n                    <option value=\"TO\">Tonga</option>\n                    <option value=\"TR\">Turkish</option>\n                    <option value=\"UK\">Ukrainian</option>\n                    <option value=\"UR\">Urdu</option>\n                    <option value=\"UZ\">Uzbek</option>\n                    <option value=\"VI\">Vietnamese</option>\n                    <option value=\"CY\">Welsh</option>\n                    <option value=\"XH\">Xhosa</option>\n                </select>\n            </div>\n            <div onClick={goBack}><img className=\"view-back_icon\" src={backButton} /></div>\n        </div>\n    );\n}\n\nexport default AvatarViewPage;","/Users/tyeecehensley/Desktop/TOIA-2.0/interface/src/pages/Recorder.js",["90","91","92","93","94","95","96","97","98","99","100","101"],"import './App.css';\nimport './Recorder.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport React,  {useState, useEffect, useRef} from \"react\";\nimport Webcam from \"react-webcam\";\nimport recordIcon from \"../icons/record_button.svg\";\nimport stopIcon from \"../icons/stop_button.svg\";\nimport closeButton from \"../icons/close-button.svg\";\nimport menuButton from \"../icons/menu2-button.svg\";\nimport axios from 'axios';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport history from '../services/history';\nimport {Menu, Sidebar, Segment, Modal, Header, Button } from 'semantic-ui-react';\n\nconst videoConstraints = {\n  width: 1400,\n  height: 500,\n  facingMode: \"user\"\n};\n\nfunction Recorder () {\n  // const history = useHistory();\n\n  function exampleReducer( state, action ) {\n    switch (action.type) {\n      case 'close':\n        return { open: false };\n      case 'open':\n        return { open: true }; \n    }\n  }\n  \n  const { transcript, resetTranscript } = useSpeechRecognition({command: '*'});\n\n  const webcamRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n  const [capturing, setCapturing] = useState(false);\n  const [recordedChunks, setRecordedChunks] = useState([]);\n\n  const [avatarName, setName] = useState(null);\n  const [avatarLanguage, setLanguage] = useState(null);\n  const [avatarID, setAvatarID] = useState(null);\n\n  const [questionList,setQuestionList]=useState([]);\n  const [videoType,setVideoType]=useState(null);\n  const [questionSelected,setQuestionSelected]=useState(null);\n  const [answerProvided,setAnswerProvided]=useState(null);\n\n  const [visible, setVisible] = React.useState(false)\n  const [state, dispatch] = React.useReducer(exampleReducer, {open: false,})\n  const { open } = state\n\n\n  useEffect(() => {\n    axios.get('http://localhost:3000/getQuestions').then((res)=>{\n      setQuestionList(res.data);\n    });\n    setName(history.location.state.name);\n    setLanguage(history.location.state.language);\n    setAvatarID(history.location.state.new_avatar_ID);\n  });\n\n  // setName(history.location.state.name);\n  // setLanguage(history.location.state.language);\n\n\n  const handleStartCaptureClick = React.useCallback((e) => {\n    console.log(avatarName,avatarLanguage,avatarID);\n    SpeechRecognition.startListening({ continuous: true });\n    setCapturing(true);\n    mediaRecorderRef.current = new MediaRecorder(webcamRef.current.stream, {\n      mimeType: \"video/webm\"\n    });\n    mediaRecorderRef.current.addEventListener(\n      \"dataavailable\",\n      handleDataAvailable\n    );\n    mediaRecorderRef.current.start();\n    e.preventDefault();\n  }, [webcamRef, setCapturing, mediaRecorderRef]);\n\n  const handleDataAvailable = React.useCallback(\n    ({ data }) => {\n      if (data.size > 0) {\n        setRecordedChunks((prev) => prev.concat(data));\n      }\n    },\n    [setRecordedChunks]\n  );\n\n  const handleStopCaptureClick = React.useCallback((e) => {\n  \n    SpeechRecognition.stopListening();\n    mediaRecorderRef.current.stop();\n    setCapturing(false);\n    e.preventDefault();\n  }, [mediaRecorderRef, webcamRef, setCapturing]);\n\n  const handleDownload = React.useCallback((e) => {\n    if (questionSelected == null){\n      alert(\"Cannot submit until a question is chosen or written, ensure that text field is not highlight when submitting\");\n    } else {\n\n      if (recordedChunks.length) {\n        const blob = new Blob(recordedChunks, {\n          type: \"video/webm\"\n        });\n\n        let form = new FormData();\n        form.append('blob', blob);\n        form.append('name',avatarName);\n        form.append('language',avatarLanguage);\n        form.append('question', questionSelected);\n        form.append('answer', transcript);\n\n        axios.post('http://localhost:3000/recorder',form);\n\n        // axios({\n        //   method: 'post',\n        //   url: 'http://localhost:3000/recorder',\n        //   data: {\n        //     body: form, // This is the body part\n        //   }\n        // });\n  \n\n\n        // const a = document.createElement(\"a\");\n        // a.style = \"display: none\";\n        // a.href = url;\n        // a.download = inputName+\".mp4\";\n        // a.click();\n        resetTranscript();\n        setRecordedChunks([]);\n      }\n    }\n    e.preventDefault();\n  }, [recordedChunks]);\n  \n\n  function buttonClick(event){\n    event.preventDefault();\n    setQuestionSelected(event.target.value);\n  }\n\n  function openModal(e){\n    dispatch({ type: 'open' });\n    e.preventDefault();\n  }\n\n  function close(){\n    history.push({\n      pathname: '/garden',\n    });\n  }\n\n\n  const inlineStyle = {\n    modal : {\n        // marginTop: '10%',\n        // marginLeft: '20%',\n        height: '400px',\n        width: '800px',\n    }\n  };\n\n  return (\n    <form className=\"record-page\" name=\"form1\" action=\"form1\" >\n        <>\n\n         <Modal //this is the new pop up menu\n            closeIcon={true}\n            size='large'\n            style={inlineStyle.modal}\n            open={open} \n            onClose={() => dispatch({ type: 'close' })}\n            >\n                <Modal.Header className=\"modal-header\">Feel free to correct your answer!</Modal.Header>\n                <Modal.Content>\n\n                <div contentEditable=\"true\" className=\"modal-ans font-class-1\" onChange={e=>setAnswerProvided(e.target.value)}>{transcript}\n                </div>\n                </Modal.Content>\n                <Modal.Actions>\n                <Button color='green' inverted onClick={handleDownload}>\n                    <i class=\"fa fa-check\"></i>\n                </Button>\n                </Modal.Actions>\n            </Modal>\n\n\n            <Sidebar.Pushable as={Segment}>\n                <Sidebar\n                    as={Menu}\n                    animation='overlay'\n                    icon='labeled'\n                    onHide={() => setVisible(false)}\n                    vertical\n                    visible={visible}\n                    width='wide'\n                >\n                    <Menu.Item>\n                        <div className=\"menu-header\">Video Type</div>\n                    </Menu.Item>\n                    <Menu.Item >\n                    <div onClick={e=>setVideoType(e.target.value)} className=\"menu-item\">Filler</div>\n                    </Menu.Item>\n                    <Menu.Item >\n                    <div onClick={e=>setVideoType(e.target.value)} className=\"menu-item1\">Greeting</div>\n                    </Menu.Item>\n                    <Menu.Item >\n                    <div onClick={e=>setVideoType(e.target.value)} className=\"menu-item2\">Exit</div>\n                    </Menu.Item>\n                    <Menu.Item >\n                    <div onClick={e=>setVideoType(e.target.value)} className=\"menu-item3\">Regular Answer</div>\n                    </Menu.Item>\n                    <Menu.Item >\n                    <div onClick={e=>setVideoType(e.target.value)} className=\"menu-item4\">Answer Y/N</div>\n                    </Menu.Item>\n                </Sidebar>\n\n                <Sidebar.Pusher dimmed={visible}>\n                  <div>\n                    <div onClick={close}><img className=\"close_icon\" src={closeButton} /></div>\n                    <div onClick={() => setVisible(true)}><img className=\"menu_icon\" src={menuButton} /></div>\n                    <Webcam className=\"layout\" audio={true} ref={webcamRef} mirrored={true} videoConstraints={videoConstraints}/>\n                    {capturing ? (\n                      <button className=\"icon\" onClick={handleStopCaptureClick}><img src={stopIcon}/></button>\n                    ) : (\n                      <button className=\"icon\" onClick={handleStartCaptureClick}><img src={recordIcon}/></button>\n                    )}\n                    {recordedChunks.length > 0 && (\n                      <button className=\"check\" onClick={openModal}><i class=\"fa fa-check\"></i></button>\n                    )}\n                    <p className=\"speech\">{transcript}</p>\n                    <button className=\"gen-q x1\" value={questionList[0]} onClick={buttonClick}>{questionList[0]}</button>\n                    <button className=\"gen-q x2\" value={questionList[1]} onClick={buttonClick}>{questionList[1]}</button>\n                    <button className=\"gen-q x3\" value={questionList[2]} onClick={buttonClick}>{questionList[2]}</button>\n                    <input\n                      className=\"type-q font-class-1\"\n                      placeholder={\"Type your own question\"}\n                      type={\"text\"}\n                      required={false}\n                      onChange={e=>setQuestionSelected(e.target.value)}\n                    />\n                  </div>\n                </Sidebar.Pusher>\n              </Sidebar.Pushable>\n            </>\n    </form>\n  );\n}\n\nexport default Recorder;","/Users/tyeecehensley/Desktop/TOIA-2.0/interface/src/pages/Player.js",["102","103","104","105","106","107","108","109"],"import React, {Component} from 'react';\nimport {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport backButton from \"../icons/back-button.svg\";\nimport history from '../services/history';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport './App.css'\nimport './Player.css';\n\nfunction Player(){\n  const { transcript, resetTranscript } = useSpeechRecognition({command: '*',callback:fetchData});\n  \n  const [avatarName, setAvatarName] = React.useState(null);\n  const [language, setLanguage] = React.useState(null);\n  const [interactionLanguage,setInteractionLanguage] = useState(null);\n  const [avatarID,setAvatarID] = React.useState(null);\n  const [video,setVideo] = useState(null);\n  const [caption,setCaption] = useState(null);\n\n  React.useEffect(() => {\n    setAvatarName(history.location.state.name);\n    setLanguage(history.location.state.language);\n    setInteractionLanguage(history.location.state.interactionLanguage);\n    setAvatarID(history.location.state.avatarID);\n  });\n\n  function goBack(){\n    history.goBack();\n  }\n\n  function fetchData(event){\n\n    event.preventDefault();\n  \n    SpeechRecognition.stopListening();\n\n    let question = transcript[0].toUpperCase()+transcript.slice(1);\n\n    let videoElem= <video className=\"player-vid\" key={question} autoPlay><source src={`http://localhost:3000/player/${avatarID}/${avatarName}/${language}/${question}`} type='video/mp4'></source></video>;\n\n    setVideo(videoElem);\n\n  }\n\n  return (\n    <div className=\"player\">\n      <div onClick={goBack}><img className=\"player-back_icon\" src={backButton} /></div>\n\n      <div className=\"player-group\">\n        <h1 className=\"player-name player-font-class-3 \">{avatarName}</h1>\n        <p className=\"player-lang player-font-class-2 \">{language}</p>\n        {video}\n        <button onClick={()=>{SpeechRecognition.startListening({ continuous: true })}}>Start</button>\n        <button onClick={fetchData}>Stop</button>\n        <button onClick={resetTranscript}>Reset</button>\n        <p>{transcript}</p>\n\n      </div>\n    </div>\n  )\n}\n\nexport default Player;\n\n","/Users/tyeecehensley/Desktop/TOIA-2.0/interface/src/pages/SignUpPage.js",["110","111","112","113","114","115","116"],"import './App.css';\nimport './SignUpPage.css';\nimport React from \"react\";\nimport submitButton from \"../icons/signup-button.svg\";\nimport history from '../services/history';\nimport backButton from \"../icons/back-button.svg\";\n\nfunction SignUpPage() {\n  var inputName= \"fname\";\n  var inputName2= \"lname\";\n  var inputName3= \"email\";\n  var inputName4= \"pass\";\n  var inputName5= \"pass1\";\n\n  var input1, input2, input3, input4, input5; //these hold all the user sign up data, they follow the order first name, \n  //last name, email and password, ignore input5  and access them in the submitHandler Function(wahib)\n\n  function myChangeHandler(event){\n    event.preventDefault();\n    var name = event.target.name;\n\n    switch(name) {\n      case inputName:\n        input1 = event.target.value;\n        break;\n      case inputName2:\n        input2 = event.target.value;\n        break;\n      case inputName3:\n        input3 = event.target.value;\n        break;\n      case inputName4:\n        input4 = event.target.value;\n        break;\n      case inputName5:\n        input5 = event.target.value;\n        break;\n    }\n  }\n\n  function submitHandler(){\n    history.push({\n      pathname: '/settings',\n    });\n    //access them here\n  }\n\n  function goBack(){\n    history.goBack();\n  }\n\n  return (\n    <form className=\"signup-page\" onSubmit={submitHandler}>\n      <input className=\"signup-button smart-layers-pointers \" type=\"image\" src={submitButton} alt=\"Submit\"/>\n      <div className=\"signup-group\">\n          <input\n              className=\"signup-pass1 signup-font-class-1\"\n              name={inputName5}\n              placeholder={\"Confirm Password\"}\n              type={\"password\"}\n              //required={true}\n              onChange={myChangeHandler}\n          />\n          <input\n              className=\"signup-pass signup-font-class-1\"\n              name={inputName4}\n              placeholder={\"New Password\"}\n              type={\"password\"}\n              //required={true}\n              onChange={myChangeHandler}\n          />\n          <input\n              className=\"signup-email signup-font-class-1\"\n              name={inputName3}\n              placeholder={\"Email\"}\n              type={\"email\"}\n              //required={true}\n              onChange={myChangeHandler}\n          />\n          <input\n              className=\"signup-lname signup-font-class-1\"\n              name={inputName2}\n              placeholder={\"Last Name\"}\n              type={\"text\"}\n              //required={true}\n              onChange={myChangeHandler}\n          />\n          <input\n              className=\"signup-fname signup-font-class-1\"\n              name={inputName}\n              placeholder={\"First Name\"}\n              type={\"text\"}\n              //required={true}\n              onChange={myChangeHandler}\n          />\n          <h1 className=\"signup-title signup-font-class-3 \">Get Started</h1>\n      </div>\n      <div onClick={goBack}><img className=\"signup-back_icon\" src={backButton} /></div>\n    </form>\n  );\n}\n\nexport default SignUpPage;","/Users/tyeecehensley/Desktop/TOIA-2.0/interface/src/pages/LoginPage.js",["117","118"],"/Users/tyeecehensley/Desktop/TOIA-2.0/interface/src/pages/AvatarGardenPage.js",["119","120","121","122","123"],"/Users/tyeecehensley/Desktop/TOIA-2.0/interface/src/pages/HomePage.js",["124","125","126"],"/Users/tyeecehensley/Desktop/TOIA-2.0/interface/src/pages/EditRecorderPage.js",["127","128","129","130","131","132","133","134","135","136","137"],"\nimport './App.css';\nimport './EditRecorderPage.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport React from \"react\";\nimport Webcam from \"react-webcam\";\nimport recordIcon from \"../icons/record_button.svg\";\nimport stopIcon from \"../icons/stop_button.svg\";\nimport closeButton from \"../icons/close-button.svg\";\nimport menuButton from \"../icons/menu2-button.svg\";\nimport history from '../services/history';\nimport {Menu, Sidebar, Segment, Modal, Header, Button } from 'semantic-ui-react';\n\nconst videoConstraints = {\n  width: 1400,\n  height: 500,\n  facingMode: \"user\"\n};\n\nvar videotype, newquestion, answer; //videotype holds the type of video, newquestion the question if chnaged, and answer,the answer to corresponding video (wahib)\nvar question = \"Your Question\"; // question of the video that the person is editing, will need to be retrieved from database (wahib)\nnewquestion = question;\n\nfunction EditRecorder () {\n\n    function exampleReducer( state, action ) {\n        switch (action.type) {\n          case 'close':\n            return { open: false };\n          case 'open':\n            return { open: true }; \n        }\n    }\n\n    const [state, dispatch] = React.useReducer(exampleReducer, {open: false,})\n    const [visible, setVisible] = React.useState(false)\n    const { open } = state\n\n\n\n    const webcamRef = React.useRef(null);\n    const mediaRecorderRef = React.useRef(null);\n    const [capturing, setCapturing] = React.useState(false);\n    const [recordedChunks, setRecordedChunks] = React.useState([]);\n\n\n    const handleStartCaptureClick = React.useCallback(() => {\n        setCapturing(true);\n        mediaRecorderRef.current = new MediaRecorder(webcamRef.current.stream, {\n        mimeType: \"video/webm\"\n        });\n        mediaRecorderRef.current.addEventListener(\n        \"dataavailable\",\n        handleDataAvailable\n        );\n        mediaRecorderRef.current.start();\n    }, [webcamRef, setCapturing, mediaRecorderRef]);\n\n    const handleDataAvailable = React.useCallback(\n        ({ data }) => {\n        if (data.size > 0) {\n            setRecordedChunks((prev) => prev.concat(data));\n        }\n        },\n        [setRecordedChunks]\n    );\n\n    const handleStopCaptureClick = React.useCallback(() => {\n        mediaRecorderRef.current.stop();\n        setCapturing(false);\n    }, [mediaRecorderRef, webcamRef, setCapturing]);\n\n    const handleDownload = React.useCallback(() => {\n        if (recordedChunks.length) {\n            const blob = new Blob(recordedChunks, {\n            type: \"video/webm\"\n            });\n            const url = URL.createObjectURL(blob);\n            const a = document.createElement(\"a\");\n            a.style = \"display: none\";\n            a.href = url;\n            a.download = ((newquestion === question) ? question+\".mp4\" : newquestion+\".mp4\");\n            a.click();\n            setRecordedChunks([]);\n        }\n    }, [recordedChunks]);\n\n    function close(){\n        history.goBack();\n    }\n\n    function changehandler(event){\n        event.preventDefault();\n        var name = event.target.className;\n\n        switch(name) {\n            case 'edit-menu-item':\n                videotype = 'filler';\n                break;\n            case 'edit-menu-item1':\n                videotype = 'greeting';\n                break;\n            case 'edit-menu-item2':\n                videotype = 'exit';\n                break;\n            case 'edit-menu-item3':\n                videotype = 'answer';\n                break;\n            case 'edit-menu-item4':\n                videotype = 'y/n';\n                break;\n            case 'edit-type-q edit-font-class-1':\n                newquestion = event.target.value;\n                break;\n            case 'edit-modal-ans edit-font-class-1':\n                answer = event.target.value;\n                break;\n        }\n    }\n\n    function submitHandler(event){\n        event.preventDefault();\n        // function needed to send new question and videotype back to database (wahib)\n    }\n    \n    const inlineStyle = {\n        modal : {\n            marginTop: '10%',\n            marginLeft: '20%',\n            height: '400px',\n            width: '800px',\n        }\n    };\n\n    return (\n        <form className=\"edit-record-page\"  onSubmit={submitHandler}>\n            <>\n            <Modal //this is the new pop up menu\n            closeIcon={true}\n            size='large'\n            style={inlineStyle.modal}\n            open={open} \n            onClose={() => dispatch({ type: 'close' })}\n            >\n                <Modal.Header className=\"edit-modal-header\">Write your answer</Modal.Header>\n                <Modal.Content>\n                <textarea\n                    className=\"edit-modal-ans edit-font-class-1\"\n                    placeholder= \"Type something....\"//delete this whe finished\n                    //defaultValue={} the variable containing the speech to text should show up here, so they can edit it\n                    type={\"text\"}\n                    onChange={changehandler}\n                > \n                </textarea>\n                </Modal.Content>\n                <Modal.Actions>\n                <Button color='green' inverted onClick={handleDownload}>\n                    <i class=\"fa fa-check\"></i>\n                </Button>\n                </Modal.Actions>\n            </Modal>\n            <Sidebar.Pushable as={Segment}>\n                <Sidebar\n                    as={Menu}\n                    animation='overlay'\n                    icon='labeled'\n                    onHide={() => setVisible(false)}\n                    vertical\n                    visible={visible}\n                    width='wide'\n                >\n                    <Menu.Item>\n                        <div className=\"edit-menu-header\">Video Type</div>\n                    </Menu.Item>\n                    <Menu.Item >\n                    <div onClick={changehandler} className=\"edit-menu-item\">Filler</div>\n                    </Menu.Item>\n                    <Menu.Item >\n                    <div onClick={changehandler} className=\"edit-menu-item1\">Greeting</div>\n                    </Menu.Item>\n                    <Menu.Item >\n                    <div onClick={changehandler} className=\"edit-menu-item2\">Exit</div>\n                    </Menu.Item>\n                    <Menu.Item >\n                    <div onClick={changehandler} className=\"edit-menu-item3\">Regular Answer</div>\n                    </Menu.Item>\n                    <Menu.Item >\n                    <div onClick={changehandler} className=\"edit-menu-item4\">Answer Y/N</div>\n                    </Menu.Item>\n                </Sidebar>\n\n                <Sidebar.Pusher dimmed={visible}>\n                    <Webcam className=\"edit-layout\" audio={true} ref={webcamRef} mirrored={true} videoConstraints={videoConstraints}/>\n                    {capturing ? (\n                        <button className=\"edit-icon\" onClick={handleStopCaptureClick}><img src={stopIcon}/></button>\n                    ) : (\n                        <button className=\"edit-icon\" onClick={handleStartCaptureClick}><img src={recordIcon}/></button>\n                    )}\n                    {recordedChunks.length > 0 && (\n                        <button className=\"edit-check\" onClick={() => dispatch({ type: 'open' })}><i class=\"fa fa-check\"></i></button>\n                    )}\n                    <input\n                        className=\"edit-type-q edit-font-class-1\"\n                        defaultValue={question}\n                        type={\"text\"}\n                        onChange={changehandler}\n                    />\n                    <div onClick={close}><img className=\"edit-close_icon\" src={closeButton} /></div>\n                    <div onClick={() => setVisible(true)}><img className=\"edit-menu_icon\" src={menuButton} /></div>\n                </Sidebar.Pusher>\n            </Sidebar.Pushable>\n            </>\n        </form>\n    );\n}\n\nexport default EditRecorder;","/Users/tyeecehensley/Desktop/TOIA-2.0/interface/src/pages/AvatarSettings.js",["138"],"import './App.css';\nimport './AvatarSettings.css';\nimport React, {useState} from \"react\";\nimport submitButton from \"../icons/submit-button.svg\";\nimport backButton from \"../icons/back-button.svg\";\nimport history from '../services/history';\nimport axios from 'axios';\n\nfunction AvatarSettings() {\n\n  const [name, setName] = useState('');\n  const [language, setLanguage] = useState('');\n  const [privacySetting, setPrivacySetting] = useState('');\n  const [bio, setBio] = useState('');\n\n  function submitHandler(event){\n    event.preventDefault();\n    axios.post('http://localhost:3000/createAvatar',\n      {\n        name,\n        language,\n        privacySetting,\n        bio\n      }).then((res)=>{\n        history.push({\n          pathname: '/recorder',\n          state: {\n            name:name,\n            language:language,\n            new_avatar_ID: res.data.new_avatar_ID\n          }\n        });\n      });\n  }\n\n  function goBack(){\n    history.goBack();\n  }\n\n  return (\n    <form className=\"avatar-settings-page-1\" onSubmit={submitHandler}>\n    <div className=\"settings-group\">\n    <h1 className=\"settings-settings settings-font-class-3 \">Settings</h1>\n    <p className=\"settings-edit settings-font-class-2 settings-animate-enter\">Edit the follwing about your avatar</p>\n    <input\n      className=\"settings-name settings-font-class-1\"\n      placeholder=\"Name\"\n      type=\"text\"\n      required={true}\n      onChange={e=>setName(e.target.value)}\n    />\n\n    <div className=\"settings-privacy settings-font-class-1 \">Privacy Settings:</div>\n    <select className=\"settings-priv settings-font-class-1\" onChange={e=>setPrivacySetting(e.target.value)}  /*required={true}*/>\n        <option value=\"\" disabled selected hidden>Select Privacy Settings...</option>\n        <option value=\"public\">Public</option>\n        <option value=\"private\">Private</option>\n    </select>\n\n\n    <div className=\"settings-language settings-font-class-1 \">Language:</div>\n        <select className=\"settings-lang settings-font-class-1\" onChange={e=>setLanguage(e.target.value)} /*required={true}*/>\n            <option value=\"\" disabled selected hidden>Select Language...</option>\n            <option value=\"AF\">Afrikaans</option>\n            <option value=\"SQ\">Albanian</option>\n            <option value=\"AR\">Arabic</option>\n            <option value=\"HY\">Armenian</option>\n            <option value=\"EU\">Basque</option>\n            <option value=\"BN\">Bengali</option>\n            <option value=\"BG\">Bulgarian</option>\n            <option value=\"CA\">Catalan</option>\n            <option value=\"KM\">Cambodian</option>\n            <option value=\"ZH\">Chinese (Mandarin)</option>\n            <option value=\"HR\">Croatian</option>\n            <option value=\"CS\">Czech</option>\n            <option value=\"DA\">Danish</option>\n            <option value=\"NL\">Dutch</option>\n            <option value=\"EN\">English</option>\n            <option value=\"ET\">Estonian</option>\n            <option value=\"FJ\">Fiji</option>\n            <option value=\"FI\">Finnish</option>\n            <option value=\"FR\">French</option>\n            <option value=\"KA\">Georgian</option>\n            <option value=\"DE\">German</option>\n            <option value=\"EL\">Greek</option>\n            <option value=\"GU\">Gujarati</option>\n            <option value=\"HE\">Hebrew</option>\n            <option value=\"HI\">Hindi</option>\n            <option value=\"HU\">Hungarian</option>\n            <option value=\"IS\">Icelandic</option>\n            <option value=\"ID\">Indonesian</option>\n            <option value=\"GA\">Irish</option>\n            <option value=\"IT\">Italian</option>\n            <option value=\"JA\">Japanese</option>\n            <option value=\"JW\">Javanese</option>\n            <option value=\"KO\">Korean</option>\n            <option value=\"LA\">Latin</option>\n            <option value=\"LV\">Latvian</option>\n            <option value=\"LT\">Lithuanian</option>\n            <option value=\"MK\">Macedonian</option>\n            <option value=\"MS\">Malay</option>\n            <option value=\"ML\">Malayalam</option>\n            <option value=\"MT\">Maltese</option>\n            <option value=\"MI\">Maori</option>\n            <option value=\"MR\">Marathi</option>\n            <option value=\"MN\">Mongolian</option>\n            <option value=\"NE\">Nepali</option>\n            <option value=\"NO\">Norwegian</option>\n            <option value=\"FA\">Persian</option>\n            <option value=\"PL\">Polish</option>\n            <option value=\"PT\">Portuguese</option>\n            <option value=\"PA\">Punjabi</option>\n            <option value=\"QU\">Quechua</option>\n            <option value=\"RO\">Romanian</option>\n            <option value=\"RU\">Russian</option>\n            <option value=\"SM\">Samoan</option>\n            <option value=\"SR\">Serbian</option>\n            <option value=\"SK\">Slovak</option>\n            <option value=\"SL\">Slovenian</option>\n            <option value=\"ES\">Spanish</option>\n            <option value=\"SW\">Swahili</option>\n            <option value=\"SV\">Swedish </option>\n            <option value=\"TA\">Tamil</option>\n            <option value=\"TT\">Tatar</option>\n            <option value=\"TE\">Telugu</option>\n            <option value=\"TH\">Thai</option>\n            <option value=\"BO\">Tibetan</option>\n            <option value=\"TO\">Tonga</option>\n            <option value=\"TR\">Turkish</option>\n            <option value=\"UK\">Ukrainian</option>\n            <option value=\"UR\">Urdu</option>\n            <option value=\"UZ\">Uzbek</option>\n            <option value=\"VI\">Vietnamese</option>\n            <option value=\"CY\">Welsh</option>\n            <option value=\"XH\">Xhosa</option>\n        </select>\n\n\n    <textarea\n      className=\"settings-bio settings-font-class-1\"\n      placeholder=\"Tell us about your TOIA\"\n      type=\"text\"\n      onChange={e=>setBio(e.target.value)}\n    ></textarea>\n    </div>\n    <input className=\"settings-submit-button smart-layers-pointers \" type=\"image\" src={submitButton} alt=\"Submit\"/>\n    <div onClick={goBack}><img className=\"settings-back_icon\" src={backButton} /></div>\n    </form>\n  );\n}\n\nexport default AvatarSettings;",{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":16},{"ruleId":"143","severity":1,"message":"147","line":3,"column":35,"nodeType":"145","messageId":"146","endLine":3,"endColumn":41},{"ruleId":"143","severity":1,"message":"148","line":3,"column":43,"nodeType":"145","messageId":"146","endLine":3,"endColumn":48},{"ruleId":"143","severity":1,"message":"149","line":3,"column":50,"nodeType":"145","messageId":"146","endLine":3,"endColumn":58},{"ruleId":"150","severity":1,"message":"151","line":40,"column":35,"nodeType":"152","endLine":40,"endColumn":85},{"ruleId":"150","severity":1,"message":"151","line":41,"column":36,"nodeType":"152","endLine":41,"endColumn":87},{"ruleId":"150","severity":1,"message":"151","line":45,"column":30,"nodeType":"152","endLine":45,"endColumn":83},{"ruleId":"143","severity":1,"message":"153","line":5,"column":8,"nodeType":"145","messageId":"146","endLine":5,"endColumn":12},{"ruleId":"150","severity":1,"message":"151","line":83,"column":59,"nodeType":"152","endLine":83,"endColumn":113},{"ruleId":"143","severity":1,"message":"154","line":18,"column":33,"nodeType":"145","messageId":"146","endLine":18,"endColumn":55},{"ruleId":"150","severity":1,"message":"151","line":53,"column":13,"nodeType":"152","endLine":53,"endColumn":54},{"ruleId":"150","severity":1,"message":"151","line":156,"column":35,"nodeType":"152","endLine":156,"endColumn":86},{"ruleId":"143","severity":1,"message":"155","line":13,"column":40,"nodeType":"145","messageId":"146","endLine":13,"endColumn":46},{"ruleId":"156","severity":1,"message":"157","line":25,"column":5,"nodeType":"158","messageId":"159","endLine":30,"endColumn":6},{"ruleId":"143","severity":1,"message":"160","line":45,"column":10,"nodeType":"145","messageId":"146","endLine":45,"endColumn":19},{"ruleId":"143","severity":1,"message":"161","line":47,"column":10,"nodeType":"145","messageId":"146","endLine":47,"endColumn":24},{"ruleId":"162","severity":1,"message":"163","line":54,"column":3,"nodeType":"145","endLine":54,"endColumn":12,"suggestions":"164"},{"ruleId":"162","severity":1,"message":"165","line":80,"column":6,"nodeType":"166","endLine":80,"endColumn":49,"suggestions":"167"},{"ruleId":"162","severity":1,"message":"168","line":97,"column":6,"nodeType":"166","endLine":97,"endColumn":49,"suggestions":"169"},{"ruleId":"162","severity":1,"message":"170","line":138,"column":6,"nodeType":"166","endLine":138,"endColumn":22,"suggestions":"171"},{"ruleId":"150","severity":1,"message":"151","line":224,"column":42,"nodeType":"152","endLine":224,"endColumn":90},{"ruleId":"150","severity":1,"message":"151","line":225,"column":59,"nodeType":"152","endLine":225,"endColumn":105},{"ruleId":"150","severity":1,"message":"151","line":228,"column":81,"nodeType":"152","endLine":228,"endColumn":102},{"ruleId":"150","severity":1,"message":"151","line":230,"column":82,"nodeType":"152","endLine":230,"endColumn":105},{"ruleId":"143","severity":1,"message":"172","line":1,"column":16,"nodeType":"145","messageId":"146","endLine":1,"endColumn":25},{"ruleId":"143","severity":1,"message":"173","line":2,"column":19,"nodeType":"145","messageId":"146","endLine":2,"endColumn":28},{"ruleId":"143","severity":1,"message":"174","line":3,"column":8,"nodeType":"145","messageId":"146","endLine":3,"endColumn":13},{"ruleId":"143","severity":1,"message":"175","line":15,"column":10,"nodeType":"145","messageId":"146","endLine":15,"endColumn":29},{"ruleId":"143","severity":1,"message":"176","line":18,"column":10,"nodeType":"145","messageId":"146","endLine":18,"endColumn":17},{"ruleId":"143","severity":1,"message":"177","line":18,"column":18,"nodeType":"145","messageId":"146","endLine":18,"endColumn":28},{"ruleId":"162","severity":1,"message":"178","line":20,"column":3,"nodeType":"179","endLine":20,"endColumn":18,"suggestions":"180"},{"ruleId":"150","severity":1,"message":"151","line":47,"column":29,"nodeType":"152","endLine":47,"endColumn":82},{"ruleId":"156","severity":1,"message":"157","line":22,"column":5,"nodeType":"158","messageId":"159","endLine":38,"endColumn":6},{"ruleId":"143","severity":1,"message":"181","line":24,"column":9,"nodeType":"145","messageId":"146","endLine":24,"endColumn":15},{"ruleId":"143","severity":1,"message":"182","line":27,"column":9,"nodeType":"145","messageId":"146","endLine":27,"endColumn":15},{"ruleId":"143","severity":1,"message":"183","line":30,"column":9,"nodeType":"145","messageId":"146","endLine":30,"endColumn":15},{"ruleId":"143","severity":1,"message":"184","line":33,"column":9,"nodeType":"145","messageId":"146","endLine":33,"endColumn":15},{"ruleId":"143","severity":1,"message":"185","line":36,"column":9,"nodeType":"145","messageId":"146","endLine":36,"endColumn":15},{"ruleId":"150","severity":1,"message":"151","line":98,"column":29,"nodeType":"152","endLine":98,"endColumn":82},{"ruleId":"143","severity":1,"message":"186","line":23,"column":12,"nodeType":"145","messageId":"146","endLine":23,"endColumn":27},{"ruleId":"150","severity":1,"message":"151","line":46,"column":29,"nodeType":"152","endLine":46,"endColumn":81},{"ruleId":"143","severity":1,"message":"187","line":44,"column":12,"nodeType":"145","messageId":"146","endLine":44,"endColumn":22},{"ruleId":"143","severity":1,"message":"188","line":44,"column":24,"nodeType":"145","messageId":"146","endLine":44,"endColumn":37},{"ruleId":"150","severity":1,"message":"151","line":79,"column":50,"nodeType":"152","endLine":79,"endColumn":106},{"ruleId":"150","severity":1,"message":"151","line":129,"column":45,"nodeType":"152","endLine":129,"endColumn":91},{"ruleId":"150","severity":1,"message":"151","line":134,"column":59,"nodeType":"152","endLine":134,"endColumn":112},{"ruleId":"150","severity":1,"message":"151","line":35,"column":7,"nodeType":"152","endLine":35,"endColumn":77},{"ruleId":"150","severity":1,"message":"151","line":42,"column":30,"nodeType":"152","endLine":42,"endColumn":78},{"ruleId":"150","severity":1,"message":"151","line":45,"column":31,"nodeType":"152","endLine":45,"endColumn":81},{"ruleId":"143","severity":1,"message":"155","line":12,"column":40,"nodeType":"145","messageId":"146","endLine":12,"endColumn":46},{"ruleId":"156","severity":1,"message":"157","line":27,"column":9,"nodeType":"158","messageId":"159","endLine":32,"endColumn":10},{"ruleId":"162","severity":1,"message":"189","line":57,"column":8,"nodeType":"166","endLine":57,"endColumn":51,"suggestions":"190"},{"ruleId":"162","severity":1,"message":"168","line":71,"column":8,"nodeType":"166","endLine":71,"endColumn":51,"suggestions":"191"},{"ruleId":"156","severity":1,"message":"157","line":96,"column":9,"nodeType":"158","messageId":"159","endLine":118,"endColumn":10},{"ruleId":"143","severity":1,"message":"192","line":110,"column":17,"nodeType":"145","messageId":"146","endLine":110,"endColumn":26},{"ruleId":"143","severity":1,"message":"193","line":116,"column":17,"nodeType":"145","messageId":"146","endLine":116,"endColumn":23},{"ruleId":"150","severity":1,"message":"151","line":195,"column":88,"nodeType":"152","endLine":195,"endColumn":109},{"ruleId":"150","severity":1,"message":"151","line":197,"column":89,"nodeType":"152","endLine":197,"endColumn":112},{"ruleId":"150","severity":1,"message":"151","line":208,"column":42,"nodeType":"152","endLine":208,"endColumn":95},{"ruleId":"150","severity":1,"message":"151","line":209,"column":59,"nodeType":"152","endLine":209,"endColumn":110},{"ruleId":"150","severity":1,"message":"151","line":147,"column":27,"nodeType":"152","endLine":147,"endColumn":82},"no-native-reassign",["194"],"no-negated-in-lhs",["195"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'Redirect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Fuse' is defined but never used.","'setInteractionLanguage' is assigned a value but never used.","'Header' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'videoType' is assigned a value but never used.","'answerProvided' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setName'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["196"],"React Hook React.useCallback has missing dependencies: 'avatarID', 'avatarLanguage', 'avatarName', and 'handleDataAvailable'. Either include them or remove the dependency array.","ArrayExpression",["197"],"React Hook React.useCallback has an unnecessary dependency: 'webcamRef'. Either exclude it or remove the dependency array.",["198"],"React Hook React.useCallback has missing dependencies: 'avatarLanguage', 'avatarName', 'questionSelected', 'resetTranscript', and 'transcript'. Either include them or remove the dependency array.",["199"],"'Component' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'interactionLanguage' is assigned a value but never used.","'caption' is assigned a value but never used.","'setCaption' is assigned a value but never used.","React Hook useEffect contains a call to 'setAvatarName'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.","MemberExpression",["200"],"'input1' is assigned a value but never used.","'input2' is assigned a value but never used.","'input3' is assigned a value but never used.","'input4' is assigned a value but never used.","'input5' is assigned a value but never used.","'myChangeHandler' is defined but never used.","'avatarList' is assigned a value but never used.","'setAvatarList' is assigned a value but never used.","React Hook React.useCallback has a missing dependency: 'handleDataAvailable'. Either include it or remove the dependency array.",["201"],["202"],"'videotype' is assigned a value but never used.","'answer' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"203","fix":"211"},{"desc":"212","fix":"213"},{"desc":"207","fix":"214"},"Add dependencies array: []",{"range":"215","text":"216"},"Update the dependencies array to be: [avatarName, avatarLanguage, avatarID, handleDataAvailable]",{"range":"217","text":"218"},"Update the dependencies array to be: [mediaRecorderRef, setCapturing]",{"range":"219","text":"220"},"Update the dependencies array to be: [avatarLanguage, avatarName, questionSelected, recordedChunks, resetTranscript, transcript]",{"range":"221","text":"222"},{"range":"223","text":"216"},"Update the dependencies array to be: [handleDataAvailable]",{"range":"224","text":"225"},{"range":"226","text":"220"},[2040,2040],", []",[2622,2665],"[avatarName, avatarLanguage, avatarID, handleDataAvailable]",[3059,3102],"[mediaRecorderRef, setCapturing]",[4256,4272],"[avatarLanguage, avatarName, questionSelected, recordedChunks, resetTranscript, transcript]",[1034,1034],[1902,1945],"[handleDataAvailable]",[2308,2351]]