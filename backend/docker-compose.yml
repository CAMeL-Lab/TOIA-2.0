version: '3'
services:
  mysql:
    image: mysql:8.0.33
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
    ports:
      - 3306:3306
    tty: true
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$DB_USERNAME --password=$$DB_PASSWORD

  phpMyAdmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - 8080:80
    environment:
      PMA_ARBITRARY: 1
      UPLOAD_LIMIT: 1024M
  
  api:
    build: ./api
    environment:
      MIX_ENV: dev
    depends_on:
      mysql:
        condition: service_healthy
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/api/health"]
    tty: true
    env_file:
      - ./.env
    volumes:
      - ./api/Accounts:/api/Accounts
    ports:
      - 4000:4000

  # nginx:
  #   build: ./nginx
  #   ports:
  #     - 4000:4000
  #   depends_on:
  #     - api

  speech-to-text-gcloud:
    build: ./speech-to-text/gcloud
    image: bishnudev/toia-stt:gcloud-v1.0
    ports:
      - 3002:3002
    tty: true
    env_file:
      - ./.env
    environment:
      - NODE_ENV=development
      - GOOGLE_SPEECH_API_CREDENTIALS_FILE=/app/secrets/gcloud-credentials.json
    volumes:
      - ./secrets:/app/secrets:ro

  q_api:
    build: ./q_api
    image: bishnudev/toia-q-api:latest
    ports:
      - "5000:5000"
    depends_on:
      mysql:
        condition: service_healthy
      api: 
        condition: service_healthy
    env_file:
      - ./.env
    tty: true

  toia-dm:
    build: ./toia-dm
    image: bishnudev/toia-dm:latest
    ports:
      - "5001:5001"
    tty: true
    depends_on:
      mysql:
        condition: service_healthy
      api:
        condition: service_healthy
    environment:
      - ENVIRONMENT=production
      - PYTHONUNBUFFERED=1
      - DM_PORT=5001
    env_file:
      - ./.env

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: always
    ports:
      - 8000:8000
      - 9443:9443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

volumes:
  portainer_data: